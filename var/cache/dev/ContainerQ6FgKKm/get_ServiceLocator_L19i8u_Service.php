<?php

namespace ContainerQ6FgKKm;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_L19i8u_Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.L19i8u.' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.L19i8u.'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\AdminController::currency' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\AdminController::index' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\AdminController::logs' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\AdminController::platforms' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\AdminController::users' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\AjaxController::getCurrency' => ['privates', '.service_locator.BjMxIOf', 'get_ServiceLocator_BjMxIOfService', true],
            'App\\Controller\\AjaxController::setCurrency' => ['privates', '.service_locator.BjMxIOf', 'get_ServiceLocator_BjMxIOfService', true],
            'App\\Controller\\PanelController::portfolio' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\SecurityController::login' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\SecurityController::register' => ['privates', '.service_locator.YUNSPEp', 'get_ServiceLocator_YUNSPEpService', true],
            'App\\Controller\\UserController::account' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\UserController::deletePlatform' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\UserController::editPlatform' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\UserController::getPlatforms' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::terminate' => ['privates', '.service_locator.bRdave9', 'get_ServiceLocator_BRdave9Service', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::terminate' => ['privates', '.service_locator.bRdave9', 'get_ServiceLocator_BRdave9Service', true],
            'App\\Controller\\AdminController:currency' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\AdminController:index' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\AdminController:logs' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\AdminController:platforms' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\AdminController:users' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\AjaxController:getCurrency' => ['privates', '.service_locator.BjMxIOf', 'get_ServiceLocator_BjMxIOfService', true],
            'App\\Controller\\AjaxController:setCurrency' => ['privates', '.service_locator.BjMxIOf', 'get_ServiceLocator_BjMxIOfService', true],
            'App\\Controller\\PanelController:portfolio' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\SecurityController:login' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\SecurityController:register' => ['privates', '.service_locator.YUNSPEp', 'get_ServiceLocator_YUNSPEpService', true],
            'App\\Controller\\UserController:account' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\UserController:deletePlatform' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\UserController:editPlatform' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\UserController:getPlatforms' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:terminate' => ['privates', '.service_locator.bRdave9', 'get_ServiceLocator_BRdave9Service', true],
        ], [
            'App\\Controller\\AdminController::currency' => '?',
            'App\\Controller\\AdminController::index' => '?',
            'App\\Controller\\AdminController::logs' => '?',
            'App\\Controller\\AdminController::platforms' => '?',
            'App\\Controller\\AdminController::users' => '?',
            'App\\Controller\\AjaxController::getCurrency' => '?',
            'App\\Controller\\AjaxController::setCurrency' => '?',
            'App\\Controller\\PanelController::portfolio' => '?',
            'App\\Controller\\SecurityController::login' => '?',
            'App\\Controller\\SecurityController::register' => '?',
            'App\\Controller\\UserController::account' => '?',
            'App\\Controller\\UserController::deletePlatform' => '?',
            'App\\Controller\\UserController::editPlatform' => '?',
            'App\\Controller\\UserController::getPlatforms' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::terminate' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'kernel::terminate' => '?',
            'App\\Controller\\AdminController:currency' => '?',
            'App\\Controller\\AdminController:index' => '?',
            'App\\Controller\\AdminController:logs' => '?',
            'App\\Controller\\AdminController:platforms' => '?',
            'App\\Controller\\AdminController:users' => '?',
            'App\\Controller\\AjaxController:getCurrency' => '?',
            'App\\Controller\\AjaxController:setCurrency' => '?',
            'App\\Controller\\PanelController:portfolio' => '?',
            'App\\Controller\\SecurityController:login' => '?',
            'App\\Controller\\SecurityController:register' => '?',
            'App\\Controller\\UserController:account' => '?',
            'App\\Controller\\UserController:deletePlatform' => '?',
            'App\\Controller\\UserController:editPlatform' => '?',
            'App\\Controller\\UserController:getPlatforms' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:terminate' => '?',
        ]);
    }
}
